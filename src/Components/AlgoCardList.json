[
  {
    "title": "Tower of Hanoi",
    "category": "Recursion",
    "description": "Solve the classic Tower of Hanoi puzzle using recursion.",
    "timeComplexity": "O(2ⁿ)",
    "spaceComplexity": "O(n)",
    "tags": ["algorithm", "maths", "numbers", "recursion"]
  },
  {
    "title": "Binary Search",
    "category": "Searching",
    "description": "A search algorithm that finds the position of a target value within a sorted array.",
    "timeComplexity": "O(log n)",
    "spaceComplexity": "O(1)",
    "tags": ["array", "searching", "divide-and-conquer"]
  },
  {
    "title": "Merge Sort",
    "category": "Sorting",
    "description": "Sort an array using the Merge Sort algorithm, a divide and conquer sorting technique.",
    "timeComplexity": "O(n log n)",
    "spaceComplexity": "O(n)",
    "tags": ["algorithm", "sorting", "divide and conquer", "recursion"]
  },
  {
    "title": "Find Duplicates",
    "category": "Searching",
    "description": "Find all duplicate numbers in an array using constant extra space.",
    "timeComplexity": "O(n)",
    "spaceComplexity": "O(1)",
    "tags": ["array", "hash", "space optimization"]
  },
  {
    "title": "Quick Sort",
    "category": "Sorting",
    "description": "Efficient divide and conquer sorting algorithm using partition strategy.",
    "timeComplexity": "O(n log n) , O(n²) ",
    "spaceComplexity": "O(log n)",
    "tags": ["algorithm", "sorting", "divide and conquer", "recursion"]
  },
  {
    "title": "Integer to Alphabet",
    "category": "Conversion",
    "description": "Convert integer values to alphabetic representation (A-Z, AA-ZZ, AAA...).",
    "timeComplexity": "O(log n)",
    "spaceComplexity": "O(log n)",
    "tags": ["algorithm", "conversion", "strings", "base conversion"]
  },
  {
    "title": "Dijkstra's Algorithm",
    "category": "Graph",
    "description": "Algorithm for finding the shortest paths between nodes in a graph with non-negative edge weights.",
    "timeComplexity": "O(E log V)",
    "spaceComplexity": "O(V + E)",
    "tags": ["graph", "shortest-path", "greedy"]
  }
]
